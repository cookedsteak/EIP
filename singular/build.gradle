
plugins {
    id "com.gradle.plugin-publish" version "0.10.0"
    id "java-gradle-plugin"
    id 'com.jfrog.bintray' version '1.8.4'
    id 'java'
    id 'groovy'

    // Required for JFrog Artifactory repository
    id 'jacoco'
    id 'maven-publish'

    // Required for Maven Nexus repository
    id 'maven'
    id 'signing'
    id 'idea'
}

apply plugin: org.web3j.solidity.gradle.plugin.SolcPlugin

solc {
    srcDir = 'src/contracts'
    abiDir = 'build/solidity'
    outputArtifacts = ['BIN', 'ABI', 'AST_JSON']
    optimize = true
    optimizeRuns = 100
    srcMaps = [
            "src=$projectDir/src",
            "openzeppelin-solidity=$projectDir/src/node_modules/openzeppelin-solidity"
    ]
    overwrite = true
    prettyJson = true

    /// wrapper
    wrapperPackageName = "io.udap.web3j"
    wrapperBaseDir = 'src/main/src-gen'
    useNativeJavaTypes = true
    excludedContracts = []
}

sourceSets {
    main {
        java {
            java.srcDir 'src/main/web3j_wrappers' // append
        }
    }
}



ext {
//    web3jVersion = '3.6.1-SNAPSHOT'
    web3jVersion = '3.6.0'
    logbackVersion = '1.2.3'
    junitVersion = '4.12'
}

dependencies {
    implementation gradleApi()
//    implementation "org.web3j:core:$web3jVersion"
//    implementation "org.web3j:geth:$web3jVersion"
//    implementation "org.web3j:codegen:$web3jVersion"
    implementation "org.web3j:console:$web3jVersion"
//    implementation "ch.qos.logback:logback-core:$logbackVersion"
//    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    testCompile "junit:junit:$junitVersion"
//    implementation ("org.ethereum:ethereumj-core:1.10.0-bran-SNAPSHOT") {
    implementation ("org.ethereum:ethereumj-core:1.9.0-RELEASE") {
        changing = true
        exclude group: "log4j"
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        exclude group: "org.ethereum", module: "solcJ-all"
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    gradlePluginPortal()
}
