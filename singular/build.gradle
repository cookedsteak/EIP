//import org.singular.IncrementalReverseTask

import org.singular.SolidityClean
import org.singular.SolidityCompile

plugins {
//    id 'com.jfrog.bintray' version '1.8.4'
    id 'java'
    id 'groovy'
    id "org.jetbrains.kotlin.jvm" version "1.2.71"
    id "com.dorongold.task-tree" version "1.3.1"
    // Required for JFrog Artifactory repository
//    id 'jacoco'
//    id 'maven-publish'

    // Required for Maven Nexus repository
//    id 'maven'
//    id 'signing'
//    id 'idea'
}

def SOL_WRAPPER = 'src/main/web3j_wrappers'
def SOL_BUILD = 'build/solidity'

// this way defining a task is very straightforward
task solc(type: SolidityCompile) {
    description 'Compile Solidity files with native solc'
    srcDir = file('src/contracts')
    abiDir = file(SOL_BUILD)
    outputArtifacts = ['BIN', 'ABI', 'AST_JSON']
    optimize = true
    optimizeRuns = 100
    otherOptions = [
            "src=$projectDir/src",
            "openzeppelin-solidity=$projectDir/src/node_modules/openzeppelin-solidity"
    ]
    overwrite = true
    prettyJson = true

    /// wrapper
    wrapperPackageName = "io.udap.web3j"
    wrapperBaseDir = file(SOL_WRAPPER)
    useNativeJavaTypes = true
    excludedContracts = []
}

compileJava.dependsOn solc

task solcClean (type: SolidityClean) {
    description 'Clean the Compile Solidity artifacts'
    abiDir = file(SOL_BUILD)
    wrapperBaseDir = file(SOL_WRAPPER)
}

clean.dependsOn(solcClean)
//
//task incre(type: IncrementalReverseTask) {
//    inputDir = file("test/a")
//    outputDir = file("test/b")
//}

sourceSets {
    main {
        java {
            java.srcDir SOL_WRAPPER // append
        }
    }
}

ext {
//    web3jVersion = '3.6.1-SNAPSHOT'
    web3jVersion = '3.6.0'
    logbackVersion = '1.2.3'
    junitVersion = '4.12'
}


dependencies {
    implementation gradleApi()

//    implementation "org.web3j:core:$web3jVersion"
//    implementation "org.web3j:geth:$web3jVersion"
//    implementation "org.web3j:codegen:$web3jVersion"
    implementation "org.web3j:console:$web3jVersion"
//    implementation "ch.qos.logback:logback-core:$logbackVersion"
//    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation "junit:junit:$junitVersion"
//    implementation ("org.ethereum:ethereumj-core:1.10.0-bran-SNAPSHOT") {
    implementation ("org.ethereum:ethereumj-core:1.9.0-RELEASE") {
        changing = true
        exclude group: "log4j"
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        exclude group: "org.ethereum", module: "solcJ-all"
        exclude group: "org.ethereum", module: "rocksdbjni"
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/path repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    gradlePluginPortal()
}
